rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    match /groups/{groupId} {
      function isMember() {
        return get(/databases/$(database)/documents/groups/$(groupId)).data.members[request.auth.uid] != null;
      }
      function isCreator() {
        return get(/databases/$(database)/documents/groups/$(groupId)).data.members[request.auth.uid] in ['admin', 'creator'];
      }
      function isAdmin() {
        return get(/databases/$(database)/documents/groups/$(groupId)).data.members[request.auth.uid] == 'admin';
      }

      allow read: if isMember();
      allow create: if request.auth != null;
      allow update: if isAdmin();
      allow delete: if get(/databases/$(database)/documents/groups/$(groupId)).data.owner == request.auth.uid;

      match /songs/{songId} {
        allow read: if isMember();
        allow write: if isCreator();
      }

      match /rehearsals/{rehearsalId} {
        allow read: if isMember();
        allow create: if isMember();
        allow delete: if isAdmin() || resource.data.createdBy == request.auth.uid;
        allow update: if false;
      }
    }
  }
}